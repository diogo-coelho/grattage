"use strict";var __awaiter=this&&this.__awaiter||function(e,n,s,l){return new(s=s||Promise)(function(a,t){function o(e){try{i(l.next(e))}catch(e){t(e)}}function r(e){try{i(l.throw(e))}catch(e){t(e)}}function i(e){var t;e.done?a(e.value):((t=e.value)instanceof s?t:new s(function(e){e(t)})).then(o,r)}i((l=l.apply(e,n||[])).next())})},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const fs_1=__importDefault(require("fs")),path_1=__importDefault(require("path")),FormattedDate_1=__importDefault(require("../../utils/FormattedDate")),UserDAO_1=__importDefault(require("../models/UserDAO")),User_1=__importDefault(require("../models/User")),AuthenticationControllerError_1=__importDefault(require("../../errors/AuthenticationControllerError")),JsonWebToken_1=__importDefault(require("../middleware/JsonWebToken")),bcrypt_1=__importDefault(require("bcrypt"));class AuthenticationController{create(a,o){return __awaiter(this,void 0,void 0,function*(){try{console.log(`[ ${FormattedDate_1.default.formattedDate} ] : Nova requisição de criação de usuário`),fs_1.default.appendFileSync(path_1.default.join(__dirname,"../../../logs/authentication.log"),`[ ${FormattedDate_1.default.formattedDate} ] : Nova requisição de criação de usuário \r
`);const t=new User_1.default;if(t.setName(a.body.name),t.setUserName(a.body.username),t.setEmail(a.body.email),yield t.setPassword(a.body.password),0<(yield AuthenticationController._userDAO.model.find({$or:[{_username:t.userName},{_email:t.email}]})).length)throw new AuthenticationControllerError_1.default(409,"Usuário existente");var e=yield AuthenticationController._userDAO.model.create(Object.assign(Object.assign({},t),{created_at:new Date,updated_at:new Date}));console.log(`[ ${FormattedDate_1.default.formattedDate} ] : Fim da requisição de criação de usuário`),fs_1.default.appendFileSync(path_1.default.join(__dirname,"../../../logs/authentication.log"),`[ ${FormattedDate_1.default.formattedDate} ] : Fim da requisição de criação de usuário \r
`),o.status(201).json({_id:e._id})}catch(e){console.log(e),o.status(e.status).json({statusCode:e._status,message:e._message,stack:e._stack})}})}login(o,r){return __awaiter(this,void 0,void 0,function*(){try{if(console.log(`[ ${FormattedDate_1.default.formattedDate} ] : Nova requisição de login`),fs_1.default.appendFileSync(path_1.default.join(__dirname,"../../../logs/authentication.log"),`[ ${FormattedDate_1.default.formattedDate} ] : Nova requisição de login \r
`),!o.body.password||!o.body.username&&!o.body.email)throw new AuthenticationControllerError_1.default(400,"Parâmetros incorretos");const a=new User_1.default;o.body.username&&a.setUserName(o.body.username),o.body.email&&a.setEmail(o.body.email);var e=yield AuthenticationController._userDAO.model.findOne({$or:[{_username:a.userName},{_email:a.email}]});if(!e)throw new AuthenticationControllerError_1.default(401,"Credenciais inválidas");if(!(yield bcrypt_1.default.compare(o.body.password,e._password)))throw new AuthenticationControllerError_1.default(401,"Credenciais inválidas");var t=(new JsonWebToken_1.default).getToken({name:e._name,username:e._username,email:e._email});console.log(`[ ${FormattedDate_1.default.formattedDate} ] : Fim da requisição de login`),fs_1.default.appendFileSync(path_1.default.join(__dirname,"../../../logs/authentication.log"),`[ ${FormattedDate_1.default.formattedDate} ] : Fim da requisição de login \r
`),r.status(200).json({token:t})}catch(e){console.log(e),r.status(e.status).json({statusCode:e._status,message:e._message,stack:e._stack})}})}}AuthenticationController._userDAO=new UserDAO_1.default,exports.default=AuthenticationController;