{"version":3,"names":[],"mappings":"","sources":["config/Application.js"],"sourcesContent":["'use strict';\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst express_1 = __importDefault(require(\"express\"));\r\nconst body_parser_1 = __importDefault(require(\"body-parser\"));\r\nconst cors_1 = __importDefault(require(\"cors\"));\r\nconst AuthenticationRouter_1 = __importDefault(require(\"../router/AuthenticationRouter\"));\r\nconst CustomError_1 = __importDefault(require(\"../errors/CustomError\"));\r\n/**\r\n * Classe responsável por instanciar a aplicação do Express\r\n */\r\nclass Application {\r\n    /**\r\n     * @construtor Constrói a instância da classe inicializando o Express\r\n     */\r\n    constructor() {\r\n        this._express = (0, express_1.default)();\r\n        this.middleware();\r\n        this.routes();\r\n    }\r\n    /**\r\n     * @returns a instãncia da aplicação do Express\r\n     */\r\n    get express() {\r\n        return this._express;\r\n    }\r\n    /**\r\n     * Aplica as middlewares do pacote body-parser\r\n     */\r\n    middleware() {\r\n        this._express.use(body_parser_1.default.json());\r\n        this._express.use(body_parser_1.default.urlencoded({ extended: false }));\r\n        this._express.use((0, cors_1.default)());\r\n    }\r\n    /**\r\n     * Configura as rotas da aplicação\r\n     */\r\n    routes() {\r\n        const router = express_1.default.Router();\r\n        this._express.use('/api/v1/', router);\r\n        this._express.use('/api/v1/authentication', AuthenticationRouter_1.default);\r\n        this._express.use('*', () => { throw new CustomError_1.default(404, 'Endpoint não encontrado'); });\r\n    }\r\n}\r\nexports.default = new Application().express;\r\n//# sourceMappingURL=Application.js.map"],"file":"Application.js"}